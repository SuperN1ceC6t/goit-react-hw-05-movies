{"version":3,"file":"static/js/414.844a7635.chunk.js","mappings":"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","sources":["pages/EditorList/EditorList.styled.jsx","pages/EditorList/EditorList.jsx","components/Form/Form.jsx","pages/Movies/Movies.jsx","services/TmbdApi.jsx"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled.ul`\n  list-style-type: none;\n`;\n\nexport const Item = styled.li`\n  font-weight: 600;\n  font-size: 18px;\n  margin-bottom: 10px;\n`;\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  color: #191d1e;\n\n  &:hover {\n    color: tomato;\n  }\n`;\n","import { useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { List, Item, MovieLink } from './EditorList.styled';\n\nconst EditorList = ({ films }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {films.map(film => (\n        <Item key={film.id}>\n          <MovieLink to={`/movies/${film.id}`} state={{ from: location }}>\n            {film.title}\n          </MovieLink>\n        </Item>\n      ))}\n    </List>\n  );\n};\n\nEditorList.propTypes = {\n  films: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    })\n  ),\n};\n\nexport default EditorList;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Form = ({ searchMovies }) => {\n  const [, setSearchParams] = useSearchParams();\n  const [query, setQuery] = useState('');\n\n  const handleInputChange = event => {\n    setQuery(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    setSearchParams({ query });\n    searchMovies(query.toLowerCase());\n  };\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <input\n        className=\"Input\"\n        type=\"text\"\n        name=\"query\"\n        autoFocus\n        value={query}\n        onChange={handleInputChange}\n      />\n      <button className=\"SubmitButton\" type=\"submit\">\n        Search\n      </button>\n    </form>\n  );\n};\n\nForm.propTypes = {\n  searchMovies: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport Loader from 'components/Loader/Loader';\nimport EditorList from 'pages/EditorList/EditorList';\nimport Form from 'components/Form/Form';\nimport { fetchSearchByKeyword } from 'services/TmbdApi';\n\nconst Movies = () => {\n  const [searchParams] = useSearchParams();\n  const [searchFilms, setSearchFilms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [noMoviesText, setNoMoviesText] = useState(false);\n\n  useEffect(() => {\n    const searchOnLoad = () => {\n      const search = searchParams.get('query');\n      if (search) {\n        searchMovies(search);\n      }\n    };\n\n    searchOnLoad();\n  }, [searchParams]);\n\n  const searchMovies = search => {\n    setLoading(true);\n\n    fetchSearchByKeyword(search)\n      .then(searchResults => {\n        setSearchFilms(searchResults);\n        setNoMoviesText(searchResults.length === 0);\n      })\n      .catch(error => {\n        console.log(error);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  };\n\n  return (\n    <main>\n      <Form searchMovies={searchMovies} />\n      {loading && <Loader />}\n      {noMoviesText && (\n        <p>There is no movies with this request. Please, try again</p>\n      )}\n      {searchFilms && <EditorList films={searchFilms} />}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nconst API_KEY = 'bf0de2b6e3937989a796df7011503882';\n\nexport const fetchTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data.results;\n};\n\nexport const fetchSearchByKeyword = async keyword => {\n  console.log('keyword', keyword);\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${keyword}`\n  );\n  return response.data.results;\n};\n\nexport const fetchMovieDetails = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const fetchActors = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data.cast;\n};\n\nexport const fetchReviews = async movieId => {\n  const response = await axios.get(\n    `movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data.results;\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","MovieLink","Link","_templateObject3","_ref","films","location","useLocation","_jsx","children","map","film","to","concat","id","state","from","title","searchMovies","_useSearchParams","useSearchParams","setSearchParams","_slicedToArray","_useState","useState","_useState2","query","setQuery","_jsxs","className","onSubmit","event","preventDefault","toLowerCase","type","name","autoFocus","value","onChange","target","searchParams","searchFilms","setSearchFilms","_useState3","_useState4","loading","setLoading","_useState5","_useState6","noMoviesText","setNoMoviesText","useEffect","search","get","searchOnLoad","fetchSearchByKeyword","then","searchResults","length","catch","error","console","log","finally","Form","Loader","EditorList","axios","API_KEY","fetchTrending","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","results","stop","apply","arguments","_ref2","_callee2","keyword","_context2","_x","fetchMovieDetails","_ref3","_callee3","movieId","_context3","_x2","fetchActors","_ref4","_callee4","_context4","cast","_x3","fetchReviews","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}